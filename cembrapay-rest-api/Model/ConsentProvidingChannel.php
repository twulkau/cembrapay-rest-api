<?php
/**
 * ConsentProvidingChannel
 *
 * PHP version 5
 *
 * @category Class
 * @package  CembraPay\RestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Transactions Gateway Microservice API
 *
 * Public JSON API integration and operations
 *
 * OpenAPI spec version: 1.0
 * Contact: integration@cembrapay.ch
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace CembraPay\RestApi\Model;
use \CembraPay\RestApi\ObjectSerializer;

/**
 * ConsentProvidingChannel Class Doc Comment
 *
 * @category Class
 * @description List of possible Consent providing channels:  - MERCHANT: consent collected by Merchant in Merchant web shop. Usually by additions in Merchants Shop terms and conditions. - MERCHANT-POS: consent collected at Merchants Pos - CEMBRAPAY-CHECKOUT: consent collected via CembraPay Checkout UI - CEMBRAPAY-REGISTRATION: consent collected via CembraPay Registration UI - AFFILIATE: consent collected by affiliate - OTHER: other way of collecting consent
 * @package  CembraPay\RestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ConsentProvidingChannel
{
    /**
     * Possible values of this enum
     */
    const MERCHANT = 'MERCHANT';
    const MERCHANT_POS = 'MERCHANT-POS';
    const CEMBRAPAY_CHECKOUT = 'CEMBRAPAY-CHECKOUT';
    const CEMBRAPAY_REGISTRATION = 'CEMBRAPAY-REGISTRATION';
    const AFFILIATE = 'AFFILIATE';
    const OTHER = 'OTHER';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::MERCHANT
            self::MERCHANT_POS
            self::CEMBRAPAY_CHECKOUT
            self::CEMBRAPAY_REGISTRATION
            self::AFFILIATE
            self::OTHER
        ];
    }
}
