<?php
/**
 * DeliveryDetails
 *
 * PHP version 5
 *
 * @category Class
 * @package  CembraPay\RestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Transactions Gateway Microservice API
 *
 * Public JSON API integration and operations
 *
 * OpenAPI spec version: 1.0
 * Contact: integration@cembrapay.ch
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.62
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace CembraPay\RestApi\Model;

use \ArrayAccess;
use \CembraPay\RestApi\ObjectSerializer;

/**
 * DeliveryDetails Class Doc Comment
 *
 * @category Class
 * @description Delivery details. Expected but not mandatory for SCR, AUT, REG or CHK request types.
 * @package  CembraPay\RestApi
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DeliveryDetails implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DeliveryDetails';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'delivery_details_different' => 'bool',
        'delivery_first_name' => 'string',
        'delivery_last_name' => 'string',
        'delivery_company_name' => 'string',
        'delivery_salutation' => '\CembraPay\RestApi\Model\SalutationType',
        'delivery_department' => 'string',
        'delivery_addr_first_line' => 'string',
        'delivery_addr_second_line' => 'string',
        'delivery_addr_house_nr' => 'string',
        'delivery_addr_postal_code' => 'string',
        'delivery_addr_town' => 'string',
        'delivery_addr_country' => 'string',
        'delivery_method' => '\CembraPay\RestApi\Model\DeliveryMethod'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'delivery_details_different' => null,
        'delivery_first_name' => null,
        'delivery_last_name' => null,
        'delivery_company_name' => null,
        'delivery_salutation' => null,
        'delivery_department' => null,
        'delivery_addr_first_line' => null,
        'delivery_addr_second_line' => null,
        'delivery_addr_house_nr' => null,
        'delivery_addr_postal_code' => null,
        'delivery_addr_town' => null,
        'delivery_addr_country' => null,
        'delivery_method' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'delivery_details_different' => 'deliveryDetailsDifferent',
        'delivery_first_name' => 'deliveryFirstName',
        'delivery_last_name' => 'deliveryLastName',
        'delivery_company_name' => 'deliveryCompanyName',
        'delivery_salutation' => 'deliverySalutation',
        'delivery_department' => 'deliveryDepartment',
        'delivery_addr_first_line' => 'deliveryAddrFirstLine',
        'delivery_addr_second_line' => 'deliveryAddrSecondLine',
        'delivery_addr_house_nr' => 'deliveryAddrHouseNr',
        'delivery_addr_postal_code' => 'deliveryAddrPostalCode',
        'delivery_addr_town' => 'deliveryAddrTown',
        'delivery_addr_country' => 'deliveryAddrCountry',
        'delivery_method' => 'deliveryMethod'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'delivery_details_different' => 'setDeliveryDetailsDifferent',
        'delivery_first_name' => 'setDeliveryFirstName',
        'delivery_last_name' => 'setDeliveryLastName',
        'delivery_company_name' => 'setDeliveryCompanyName',
        'delivery_salutation' => 'setDeliverySalutation',
        'delivery_department' => 'setDeliveryDepartment',
        'delivery_addr_first_line' => 'setDeliveryAddrFirstLine',
        'delivery_addr_second_line' => 'setDeliveryAddrSecondLine',
        'delivery_addr_house_nr' => 'setDeliveryAddrHouseNr',
        'delivery_addr_postal_code' => 'setDeliveryAddrPostalCode',
        'delivery_addr_town' => 'setDeliveryAddrTown',
        'delivery_addr_country' => 'setDeliveryAddrCountry',
        'delivery_method' => 'setDeliveryMethod'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'delivery_details_different' => 'getDeliveryDetailsDifferent',
        'delivery_first_name' => 'getDeliveryFirstName',
        'delivery_last_name' => 'getDeliveryLastName',
        'delivery_company_name' => 'getDeliveryCompanyName',
        'delivery_salutation' => 'getDeliverySalutation',
        'delivery_department' => 'getDeliveryDepartment',
        'delivery_addr_first_line' => 'getDeliveryAddrFirstLine',
        'delivery_addr_second_line' => 'getDeliveryAddrSecondLine',
        'delivery_addr_house_nr' => 'getDeliveryAddrHouseNr',
        'delivery_addr_postal_code' => 'getDeliveryAddrPostalCode',
        'delivery_addr_town' => 'getDeliveryAddrTown',
        'delivery_addr_country' => 'getDeliveryAddrCountry',
        'delivery_method' => 'getDeliveryMethod'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['delivery_details_different'] = isset($data['delivery_details_different']) ? $data['delivery_details_different'] : null;
        $this->container['delivery_first_name'] = isset($data['delivery_first_name']) ? $data['delivery_first_name'] : null;
        $this->container['delivery_last_name'] = isset($data['delivery_last_name']) ? $data['delivery_last_name'] : null;
        $this->container['delivery_company_name'] = isset($data['delivery_company_name']) ? $data['delivery_company_name'] : null;
        $this->container['delivery_salutation'] = isset($data['delivery_salutation']) ? $data['delivery_salutation'] : null;
        $this->container['delivery_department'] = isset($data['delivery_department']) ? $data['delivery_department'] : null;
        $this->container['delivery_addr_first_line'] = isset($data['delivery_addr_first_line']) ? $data['delivery_addr_first_line'] : null;
        $this->container['delivery_addr_second_line'] = isset($data['delivery_addr_second_line']) ? $data['delivery_addr_second_line'] : null;
        $this->container['delivery_addr_house_nr'] = isset($data['delivery_addr_house_nr']) ? $data['delivery_addr_house_nr'] : null;
        $this->container['delivery_addr_postal_code'] = isset($data['delivery_addr_postal_code']) ? $data['delivery_addr_postal_code'] : null;
        $this->container['delivery_addr_town'] = isset($data['delivery_addr_town']) ? $data['delivery_addr_town'] : null;
        $this->container['delivery_addr_country'] = isset($data['delivery_addr_country']) ? $data['delivery_addr_country'] : null;
        $this->container['delivery_method'] = isset($data['delivery_method']) ? $data['delivery_method'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets delivery_details_different
     *
     * @return bool
     */
    public function getDeliveryDetailsDifferent()
    {
        return $this->container['delivery_details_different'];
    }

    /**
     * Sets delivery_details_different
     *
     * @param bool $delivery_details_different Must be set to 'true', when Delivery address is different from Billing address
     *
     * @return $this
     */
    public function setDeliveryDetailsDifferent($delivery_details_different)
    {
        $this->container['delivery_details_different'] = $delivery_details_different;

        return $this;
    }

    /**
     * Gets delivery_first_name
     *
     * @return string
     */
    public function getDeliveryFirstName()
    {
        return $this->container['delivery_first_name'];
    }

    /**
     * Sets delivery_first_name
     *
     * @param string $delivery_first_name First Name of recipient person.
     *
     * @return $this
     */
    public function setDeliveryFirstName($delivery_first_name)
    {
        $this->container['delivery_first_name'] = $delivery_first_name;

        return $this;
    }

    /**
     * Gets delivery_last_name
     *
     * @return string
     */
    public function getDeliveryLastName()
    {
        return $this->container['delivery_last_name'];
    }

    /**
     * Sets delivery_last_name
     *
     * @param string $delivery_last_name Last Name of recipient person.
     *
     * @return $this
     */
    public function setDeliveryLastName($delivery_last_name)
    {
        $this->container['delivery_last_name'] = $delivery_last_name;

        return $this;
    }

    /**
     * Gets delivery_company_name
     *
     * @return string
     */
    public function getDeliveryCompanyName()
    {
        return $this->container['delivery_company_name'];
    }

    /**
     * Sets delivery_company_name
     *
     * @param string $delivery_company_name Company Name of the recipient.
     *
     * @return $this
     */
    public function setDeliveryCompanyName($delivery_company_name)
    {
        $this->container['delivery_company_name'] = $delivery_company_name;

        return $this;
    }

    /**
     * Gets delivery_salutation
     *
     * @return \CembraPay\RestApi\Model\SalutationType
     */
    public function getDeliverySalutation()
    {
        return $this->container['delivery_salutation'];
    }

    /**
     * Sets delivery_salutation
     *
     * @param \CembraPay\RestApi\Model\SalutationType $delivery_salutation delivery_salutation
     *
     * @return $this
     */
    public function setDeliverySalutation($delivery_salutation)
    {
        $this->container['delivery_salutation'] = $delivery_salutation;

        return $this;
    }

    /**
     * Gets delivery_department
     *
     * @return string
     */
    public function getDeliveryDepartment()
    {
        return $this->container['delivery_department'];
    }

    /**
     * Sets delivery_department
     *
     * @param string $delivery_department Department name of the recipient.
     *
     * @return $this
     */
    public function setDeliveryDepartment($delivery_department)
    {
        $this->container['delivery_department'] = $delivery_department;

        return $this;
    }

    /**
     * Gets delivery_addr_first_line
     *
     * @return string
     */
    public function getDeliveryAddrFirstLine()
    {
        return $this->container['delivery_addr_first_line'];
    }

    /**
     * Sets delivery_addr_first_line
     *
     * @param string $delivery_addr_first_line First line of delivery address.
     *
     * @return $this
     */
    public function setDeliveryAddrFirstLine($delivery_addr_first_line)
    {
        $this->container['delivery_addr_first_line'] = $delivery_addr_first_line;

        return $this;
    }

    /**
     * Gets delivery_addr_second_line
     *
     * @return string
     */
    public function getDeliveryAddrSecondLine()
    {
        return $this->container['delivery_addr_second_line'];
    }

    /**
     * Sets delivery_addr_second_line
     *
     * @param string $delivery_addr_second_line Second line of delivery address. Can contain some additional data for example '3rd floor'.
     *
     * @return $this
     */
    public function setDeliveryAddrSecondLine($delivery_addr_second_line)
    {
        $this->container['delivery_addr_second_line'] = $delivery_addr_second_line;

        return $this;
    }

    /**
     * Gets delivery_addr_house_nr
     *
     * @return string
     */
    public function getDeliveryAddrHouseNr()
    {
        return $this->container['delivery_addr_house_nr'];
    }

    /**
     * Sets delivery_addr_house_nr
     *
     * @param string $delivery_addr_house_nr House number of delivery address, icluding extensions, for example '22a'.
     *
     * @return $this
     */
    public function setDeliveryAddrHouseNr($delivery_addr_house_nr)
    {
        $this->container['delivery_addr_house_nr'] = $delivery_addr_house_nr;

        return $this;
    }

    /**
     * Gets delivery_addr_postal_code
     *
     * @return string
     */
    public function getDeliveryAddrPostalCode()
    {
        return $this->container['delivery_addr_postal_code'];
    }

    /**
     * Sets delivery_addr_postal_code
     *
     * @param string $delivery_addr_postal_code Postal code of delivery address.
     *
     * @return $this
     */
    public function setDeliveryAddrPostalCode($delivery_addr_postal_code)
    {
        $this->container['delivery_addr_postal_code'] = $delivery_addr_postal_code;

        return $this;
    }

    /**
     * Gets delivery_addr_town
     *
     * @return string
     */
    public function getDeliveryAddrTown()
    {
        return $this->container['delivery_addr_town'];
    }

    /**
     * Sets delivery_addr_town
     *
     * @param string $delivery_addr_town Town of delivery address.
     *
     * @return $this
     */
    public function setDeliveryAddrTown($delivery_addr_town)
    {
        $this->container['delivery_addr_town'] = $delivery_addr_town;

        return $this;
    }

    /**
     * Gets delivery_addr_country
     *
     * @return string
     */
    public function getDeliveryAddrCountry()
    {
        return $this->container['delivery_addr_country'];
    }

    /**
     * Sets delivery_addr_country
     *
     * @param string $delivery_addr_country Country of delivery address, ISO3166-1 alpha 2 code (two letters).
     *
     * @return $this
     */
    public function setDeliveryAddrCountry($delivery_addr_country)
    {
        $this->container['delivery_addr_country'] = $delivery_addr_country;

        return $this;
    }

    /**
     * Gets delivery_method
     *
     * @return \CembraPay\RestApi\Model\DeliveryMethod
     */
    public function getDeliveryMethod()
    {
        return $this->container['delivery_method'];
    }

    /**
     * Sets delivery_method
     *
     * @param \CembraPay\RestApi\Model\DeliveryMethod $delivery_method delivery_method
     *
     * @return $this
     */
    public function setDeliveryMethod($delivery_method)
    {
        $this->container['delivery_method'] = $delivery_method;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
